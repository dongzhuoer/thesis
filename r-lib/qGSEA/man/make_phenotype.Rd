% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gsea.R
\name{make_phenotype}
\alias{make_phenotype}
\title{make phenotype tibble for \link{write_cls}}
\usage{
make_phenotype(matrix, chip, gene)
}
\arguments{
\item{matrix}{tibble. usually the return value of \code{\link[rGEO:read_gse_matrix]{rGEO::read_gse_matrix()}}}

\item{chip}{tibble. usually the return value of \code{\link[rGEO:read_gse_soft]{rGEO::read_gse_soft()}}}

\item{gene}{character. HUGO gene symbol of your interested gene}
}
\value{
tibble. each column represents a \emph{phenotype}, its name is the phenotype's name (hugo gene symbol), its value contains expression value of all samples in the .txt file
}
\description{
make phenotype tibble for \link{write_cls}
}
\section{internal note}{
 \code{max(c(NA,NA), na.rm = TRUE)} produces \code{-Inf}
}

\section{to do}{
 reject too many NA
\code{
		if (sum(is.infinite(value)) / length(value) <= 0.25) {}
     testthat::test_that('make_gsea_input()', {
	        dataset <- gse51280 %>% {.[[2]][1:5] = 'ANKLE2'; .}
	        gene <- 'ANKLE2'
	        output_file <- 'tests/testthat/output/GSE51280'
	        testthat::expect_true(make_gsea_input(dplyr::mutate_at(dataset, 3:4, . %>% {NA}), gene, output_file));
	       testthat::expect_false(make_gsea_input(dplyr::mutate_at(dataset, 3:10, . %>% {NA}), gene, '/tmp/foobar'));
    });
}
}

\examples{
NULL
}
